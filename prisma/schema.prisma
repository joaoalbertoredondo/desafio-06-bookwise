generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  avatarUrl     String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
  ratings  Rating[]
  books    Book[]

  @@map("users")
}

model Book {
  id         String   @id @default(uuid())
  name       String
  author     String
  summary    String
  category   String
  coverUrl   String
  totalPages Int
  createdAt  DateTime @default(now())

  ratings Rating[]

  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@map("books")
}

model Rating {
  id          String   @id @default(uuid())
  rate        Int
  createdAt   DateTime @default(now())
  description String

  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  Book   Book?   @relation(fields: [bookId], references: [id])
  bookId String?

  @@map("ratings")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refreshToken      String?
  accessToken       String?
  expiresAt         Int?
  tokenType         String?
  scope             String?
  idToken           String
  sessionState      String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  createdAt    DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  @@map("sessions")
}
